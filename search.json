[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Surya, and I am a Horace Mann student.\nKaneâ€™s Free Data Science Bootcamp"
  },
  {
    "objectID": "about.html#about-me",
    "href": "about.html#about-me",
    "title": "About",
    "section": "",
    "text": "My name is Surya, and I am a Horace Mann student.\nKaneâ€™s Free Data Science Bootcamp"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Billboard Graphic",
    "section": "",
    "text": "suppressPackageStartupMessages(library(tidyverse))\n\n\nlibrary(tidyr)\nlibrary(ggplot2)\n\n# Load the billboard data\ndata(\"billboard\")\n\n# Transform from wide to long format\nbillboard_long &lt;- billboard %&gt;%\n  pivot_longer(cols = starts_with(\"wk\"),\n               names_to = \"week\",\n               values_to = \"rank\",\n               names_prefix = \"wk\") %&gt;%\n  mutate(week = as.integer(week)) %&gt;%\n  filter(!is.na(rank))\n\n# Select top 5 songs by peak rank\ntop_songs &lt;- billboard_long %&gt;%\n  group_by(track, artist) %&gt;%\n  summarise(min_rank = min(rank), .groups = \"drop\") %&gt;%\n  slice_min(order_by = min_rank, n = 5) %&gt;%\n  unite(\"song\", artist, track, sep = \" - \")\n\n# Prepare data for plotting\nplot_data &lt;- billboard_long %&gt;%\n  unite(\"song\", artist, track, sep = \" - \") %&gt;%\n  semi_join(top_songs, by = \"song\")\n\n# Create the plot\nggplot(plot_data, aes(x = week, y = rank, color = song)) +\n  geom_line(size = 1.2) +\n  scale_y_reverse(breaks = seq(1, 100, by = 10)) +\n  scale_x_continuous(breaks = seq(0, 76, by = 5)) +\n  labs(\n    title = \"ðŸŽ¶ Billboard Top 100 Chart Trajectories\",\n    subtitle = \"Top 5 Songs by Peak Rank (2000)\",\n    x = \"Week on Chart\",\n    y = \"Chart Position\",\n    color = \"Song\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 18),\n    plot.subtitle = element_text(size = 13),\n    legend.position = \"bottom\",\n    panel.grid.minor = element_blank()\n  ) +\n  scale_color_brewer(palette = \"Set1\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nâ„¹ Please use `linewidth` instead.\n\n\nWarning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Set1 is 9\nReturning the palette you asked for with that many colors\n\n\nWarning: Removed 269 rows containing missing values or values outside the scale range\n(`geom_line()`)."
  }
]